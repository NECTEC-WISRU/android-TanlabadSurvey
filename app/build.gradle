/*
 * Copyright (c) 2016 NECTEC
 *   National Electronics and Computer Technology Center, Thailand
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

version versionName

buildscript {
    repositories {
        maven { url "https://maven.fabric.io/public" }
        maven { url "https://jitpack.io" }
        jcenter()
    }

    dependencies {
        classpath "io.fabric.tools:gradle:1.21.6"
        classpath "com.neenbedankt.gradle.plugins:android-apt:1.8"
        classpath 'com.google.gms:google-services:2.1.0'
        classpath 'com.noveogroup.android:check:1.2.3'
    }
}

apply plugin: "com.android.application"
apply plugin: "com.github.triplet.play"
apply plugin: "io.fabric"
apply plugin: "com.neenbedankt.android-apt"
apply plugin: "com.noveogroup.android.check"

repositories {
    maven { url "https://maven.fabric.io/public" }

}

android {
    compileSdkVersion 23
    buildToolsVersion "25.0.0"

    playAccountConfigs {
        defaultAccountConfig {
            jsonFile = file('wnp-service-account-key.json')
        }
    }

    defaultConfig {
        applicationId "org.tanrabad.survey"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testApplicationId "org.tanrabad.survey.test"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        manifestPlaceholders = [manifestApplicationId: "${applicationId}",
                                onesignal_app_id: "b92149c9-8d41-4bf7-aedb-3c6c3cb65c4c",
                                onesignal_google_project_number: "139178348155"]
        resValue "string", "app_build_time", "build $buildTime"
        buildConfigField "String", "TRB_AUTHEN_CLIENT_ID", "\"$clientId\""
        buildConfigField "String", "TRB_AUTHEN_CLIENT_SECRET", "\"$clientSecret\""
        buildConfigField "String", "API_BASE_URL_TEST", "\"$apiBaseUrlTest\""
        buildConfigField "int", "SURVEY_RANGE_DAY", "1"

        playAccountConfig = playAccountConfigs.defaultAccountConfig
    }

    compileOptions {
        sourceCompatibility rootProject.javaVersion
        targetCompatibility rootProject.javaVersion
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
        release {
            storeFile file("release.keystore")
            keyAlias System.getenv("TANRABAD_KEY_ALIAS")
            keyPassword System.getenv("TANRABAD_KEY_PASSWORD")
            storePassword System.getenv("TANRABAD_STORE_PASSWORD")
        }
    }

    buildTypes {
        debug {
            debuggable true
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false

            manifestPlaceholders = [google_map_key: System.getenv("TANRABAD_GOOGLE_DEBUG_KEY")]
            buildConfigField "String", "API_BASE_URL", "\"$apiBaseUrlTest\""
            buildConfigField "String", "TRIAL_USER", "\"trial-debug\""
            resValue "string", "app_version", "version $versionName-Debug"
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"

            manifestPlaceholders = [google_map_key: System.getenv("TANRABAD_GOOGLE_RELEASE_KEY")]
            buildConfigField "String", "API_BASE_URL", "\"$apiBaseUrlProduction\""
            buildConfigField "String", "TRIAL_USER", "\"trial-release\""
            resValue "string", "app_version", "version $versionName"
        }
    }

    lintOptions {
        abortOnError true
        checkAllWarnings true
        warningsAsErrors true
        disable "IconColors", "InvalidPackage", "TrustAllX509TrustManager", "NewerVersionAvailable", "IconExpectedSize",
                "GradleDependency", "StaticFieldLeak", "HardwareIds", "OldTargetApi"
    }

    packagingOptions {
        exclude "LICENSE.txt"
        exclude "META-INF/DEPENDENCIES"
        exclude "META-INF/ASL2.0"
        exclude "META-INF/NOTICE"
        exclude "META-INF/LICENSE"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    dexOptions {
        if (isCi) {
            incremental false
            preDexLibraries false
        }
    }
    useLibrary "org.apache.http.legacy"
}

dependencies {
    def loganSquareVersion = "1.3.6"
    def supportLibVersion = "23.4.0"
    def playServicesVersion = "8.4.0"

    apt "com.bluelinelabs:logansquare-compiler:$loganSquareVersion"

    compile fileTree(dir: "lib", include: ["*.jar"])
    compile project(":domain")
    compile "com.onesignal:OneSignal:2.3.0@aar"
    compile "com.android.support:cardview-v7:$supportLibVersion"
    compile "com.android.support:preference-v14:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"
    compile "com.android.support:percent:$supportLibVersion"
    compile "com.google.android.gms:play-services-gcm:$playServicesVersion"
    compile "com.google.android.gms:play-services-appindexing:$playServicesVersion"
    compile "com.google.android.gms:play-services-location:$playServicesVersion"
    compile "com.google.android.gms:play-services-maps:$playServicesVersion"
    compile "com.google.android.gms:play-services-analytics:$playServicesVersion"
    compile("com.google.maps.android:android-maps-utils:0.4.3") { exclude(group: "com.google.android.gms") }
    compile "com.bartoszlipinski.recyclerviewheader:library:1.2.1"
    compile "com.bluelinelabs:logansquare:$loganSquareVersion"
    compile("com.crashlytics.sdk.android:answers:1.3.10@aar") { transitive = true; }
    compile("com.crashlytics.sdk.android:crashlytics:2.6.5@aar") { transitive = true; }
    compile "com.squareup.okhttp3:okhttp:3.5.0"
    compile "joda-time:joda-time:$jodaTimeVersion"
    compile "net.frakbot:jumpingbeans:1.3.0"
    compile "th.or.nectec.android:thai-widget:0.4.5"
    compile "uk.co.chrisjenx:calligraphy:2.2.0"
    compile "com.artit-k:license-fragment:1.3.0"
    compile "cat.ereza:customactivityoncrash:1.5.0"
    compile "de.hdodenhof:circleimageview:2.0.0"
    compile "it.sephiroth.android.library.targettooltip:target-tooltip-library:1.3.14"

    def mockitoVersion = "1.10.19"
    testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.slf4j:slf4j-simple:1.6.4"
    testCompile "com.github.tomakehurst:wiremock:1.57"

    def dexmakerVersion = "1.2"
    def espressoRuleRunnerVersion = "0.5"
    def espressoVersion = "2.2.2"

    androidTestCompile "com.android.support:support-annotations:$supportLibVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$espressoVersion"
    androidTestCompile "com.android.support.test:runner:$espressoRuleRunnerVersion"
    androidTestCompile "com.android.support.test:rules:$espressoRuleRunnerVersion"
    androidTestCompile "org.mockito:mockito-core:$mockitoVersion"
    androidTestCompile "com.google.dexmaker:dexmaker:$dexmakerVersion"
    androidTestCompile("com.google.dexmaker:dexmaker-mockito:$dexmakerVersion") {
        exclude module: "hamcrest-core"
        exclude module: "objenesis"
        exclude module: "mockito-core"
    }
}

apply plugin: 'com.google.gms.google-services'

configurations.all { resolutionStrategy.force "com.fasterxml.jackson.core:jackson-core:2.6.0"}

check {
    checkstyle {
        abortOnError true
        config checkstyleConfigFile
    }
    findbugs {
        skip true
    }
    pmd {
        config pmdRuleSetFiles.getAt(0)
    }
}
