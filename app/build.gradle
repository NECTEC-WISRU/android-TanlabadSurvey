/*
 * Copyright (c)  2015  NECTEC
 *   National Electronics and Computer Technology Center, Thailand
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

def versionMajor = 0
def versionMinor = 0
def versionPatch = 1

def buildNumber = "$versionMajor.$versionMinor.$versionPatch"

def buildTime() {
    def df = new SimpleDateFormat("yyMMddhhmm")
    return df.format(new Date())
}

def genVersionName = "$buildNumber";
def genVersionCode = versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "th.or.nectec.tanlabad.survey"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode genVersionCode
        versionName genVersionName
        testApplicationId "th.or.nectec.tanlabad.survey.test"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaSourceCompatibility
        targetCompatibility rootProject.ext.javaTargetCompatibility
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError true
        checkAllWarnings true
        warningsAsErrors true
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':entity')
    compile 'com.android.support:appcompat-v7:' + rootProject.ext.supportLibVersion

    androidTestCompile 'com.android.support.test:runner:' + rootProject.ext.runnerVersion
    androidTestCompile 'com.android.support.test:rules:' + rootProject.ext.rulesVersion
    androidTestCompile 'com.android.support.test.espresso:espresso-core:' + rootProject.ext.espressoVersion
}
